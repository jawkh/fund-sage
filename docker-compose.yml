# Copyright (c) 2024 by Jonathan AW

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}  # Admin username set in .env file
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Admin password set in .env file
      POSTGRES_DB: ${POSTGRES_DB}  # This is the initial database that is created automatically
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d  # Mounts the initialization scripts directory
    networks:
      - fund_sage_network
    ports:  
    - "5432:5432"  

  fund-sage-app:
    build: .
    depends_on:
      - db
    environment: 
      FLASK_APP: api/__init__.py
      FLASK_RUN_HOST: ${FLASK_RUN_HOST}
      FLASK_RUN_PORT: ${FLASK_RUN_PORT}
      DATABASE_URL: ${API_DATABASE_URL} 
      FLASK_ENV: ${FLASK_ENV}
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ACCESS_TOKEN_EXPIRES: ${JWT_ACCESS_TOKEN_EXPIRES}
      APPLICATION_ROOT: ${APPLICATION_ROOT}
      PREFERRED_URL_SCHEME: ${PREFERRED_URL_SCHEME}
      MAX_PASSWORD_RETRIES: ${MAX_PASSWORD_RETRIES}
      PASSWORD_RETRIES_TIME_WINDOW_MINUTES: ${PASSWORD_RETRIES_TIME_WINDOW_MINUTES}
      FLASK_DEBUG: ${FLASK_DEBUG}  
      DEBUGYPY_HOST: ${DEBUGYPY_HOST}
      DEBUGYPY_PORT: ${DEBUGYPY_PORT}
      PROVISION_DUMMY_APPLICATIONS: ${PROVISION_DUMMY_APPLICATIONS}
      PROVISION_DUMMY_APPLICANTS: ${PROVISION_DUMMY_APPLICANTS}
    networks:
      - fund_sage_network
    ports: 
      - "5000:5000"  
      - "5678:5678"
    command: >
      bash -c './wait-for-it.sh db:5432 --timeout=30 --strict -- echo "Database is up" && \
        poetry run python bin/__init_sys_database.py && \
        poetry run python bin/__data_prep_administrators.py && \
        poetry run python bin/__data_prep_supported_schemes.py && \
        poetry run python bin/__data_prep_random_applicants.py && \
        poetry run python bin/__data_prep_applications.py && \
        if [ "${FLASK_DEBUG}" = "1" ]; then poetry run python -m debugpy --listen ${DEBUGYPY_HOST}:${DEBUGYPY_PORT} --wait-for-client -m flask run --no-reload --host=${FLASK_RUN_HOST} --port=${FLASK_RUN_PORT}; else poetry run flask run --host=${FLASK_RUN_HOST} --port=${FLASK_RUN_PORT}; fi'


  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - fund_sage_network

volumes:
  postgres_data:

networks:
  fund_sage_network:
    driver: bridge
